{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/11/10-install-firefox-developer-edition-on-ubuntu/","webpackCompilationHash":"05a7d648ab954a4076ed","result":{"data":{"markdownRemark":{"html":"<p>Returning from a long break, I thought I'd try something totally new.  I've long been looking for a way to programmatically rebuild my laptop, so I can nuke it whenever I feel like, run a set of scripts, and have a fresh and clean operating system reloaded for me.  Since I've started using Ubuntu on my laptop, I've had to level up my bash skills to make this automated approach a reality.</p>\n<p>Today, I'm going to run down what I think is a very robust script for installing Firefox Developer Edition using bash on Ubuntu 18.04+.  I found several blog posts and many help articles on how to do this, but none of them actually worked correctly.  This post is for those that want a single bash script to:</p>\n<ul>\n<li>Download latest version of Firefox Developer Edition</li>\n<li>Backup their previous version in case of issue</li>\n<li>Create a desktop entry they can favorite</li>\n</ul>\n<p>For the anxious, here's the entire script up front.  I'll take you through it step by step afterward:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># Function to make messaging easier</span>\n<span class=\"token builtin class-name\">read</span> -r error success warning notify nocolor <span class=\"token operator\">&lt;&lt;&lt;</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[1;31m\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[1;32m\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[1;33m\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[1;34m\"</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token function-name function\">message</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token assign-left variable\">msg</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$2</span>\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token operator\">!</span>1}</span><span class=\"token variable\">$1</span>:<span class=\"token variable\">${nocolor}</span> <span class=\"token variable\">$2</span>\"</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token file-descriptor important\">&amp;2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Check for root privileges</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token environment constant\">$EUID</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  message notify <span class=\"token string\">\"Please assume root privileges\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Backup helper function</span>\ncheck-create-<span class=\"token function-name function\">backup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -d <span class=\"token string\">\"/opt/<span class=\"token variable\">$1</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    message notify <span class=\"token string\">\"/opt/<span class=\"token variable\">$1</span> is not installed.\"</span>\n    <span class=\"token function\">mkdir</span> --verbose /opt/<span class=\"token variable\">$1</span>\n  <span class=\"token keyword\">else</span>\n    message notify <span class=\"token string\">\"Previous version of <span class=\"token variable\">$1</span> exists.  Deleting last backup and saving current version as backup.\"</span>\n    <span class=\"token function\">rm</span> --force --recursive /opt/<span class=\"token variable\">$1</span>-previous\n    <span class=\"token function\">mv</span> --verbose /opt/<span class=\"token variable\">$1</span> /opt/<span class=\"token variable\">$1</span>-previous\n    message success <span class=\"token string\">\"Old version backed up to /opt/<span class=\"token variable\">$1</span>-previous\"</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Check for ~/Downloads directory</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d ~/Downloads <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  message notify <span class=\"token string\">\"~/Downloads exists, proceeding to save file there.\"</span>\n<span class=\"token keyword\">else</span>\n  message notify <span class=\"token string\">\"No Downloads folder exists yet, so creating one.\"</span>\n  <span class=\"token function\">mkdir</span> --verbose ~/Downloads\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Calculate current Firefox version and download URL</span>\n<span class=\"token assign-left variable\">firefox_json</span><span class=\"token operator\">=</span>https://product-details.mozilla.org/1.0/devedition.json\n<span class=\"token assign-left variable\">firefox_version</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> --silent $firefox_json <span class=\"token operator\">|</span> jq <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">|</span> <span class=\"token function\">egrep</span> <span class=\"token string\">\"version\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> --reverse --version-sort <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -1 <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token punctuation\">[</span><span class=\"token punctuation\">\\</span>\"<span class=\"token punctuation\">]</span> <span class=\"token string\">'{print <span class=\"token variable\">$4</span>}'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">firefox_file</span><span class=\"token operator\">=</span>firefox-<span class=\"token variable\">$firefox_version</span>.tar.bz2\nfirefox_url<span class=\"token operator\">=</span>https://download-installer.cdn.mozilla.net/pub/devedition/releases/<span class=\"token variable\">$firefox_version</span>/linux-x86_64/en-US/<span class=\"token variable\">$firefox_file</span>\n\n\nmessage notify <span class=\"token string\">\"Downloading Firefox Developer Edition <span class=\"token variable\">$firefox_version</span> from <span class=\"token variable\">$firefox_url</span>\"</span>\n<span class=\"token function\">curl</span> -o ~/Downloads/<span class=\"token variable\">$firefox_file</span> <span class=\"token variable\">$firefox_url</span>\n<span class=\"token assign-left variable\">exit_status</span><span class=\"token operator\">=</span><span class=\"token variable\">$?</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$exit_status</span> -ne <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token variable\">$exit_status</span>\n<span class=\"token keyword\">else</span>\n  check-create-backup firefox\n\n  message notify \"Extracting downloaded <span class=\"token variable\">$firefox_file</span><span class=\"token punctuation\">..</span>.<span class=\"token string\">\"\n  tar --extract --bzip2 --file ~/Downloads/<span class=\"token variable\">$firefox_file</span> --directory /opt\n\n  message notify \"</span>Creating symlink <span class=\"token keyword\">for</span> Firefox<span class=\"token string\">\"\n  ln --force --symbolic --verbose /opt/firefox/firefox /usr/local/bin/firefox\n\n  cp --verbose ./firefox-developer.desktop /usr/share/applications/\n  chmod +x /usr/share/applications/firefox-developer.desktop\n\n  message notify \"</span>Cleaning up downloaded files<span class=\"token punctuation\">..</span>.<span class=\"token string\">\"\n  rm --verbose ~/Downloads/<span class=\"token variable\">$firefox_file</span>\nfi\n\nmessage success \"</span>Firefox Developer Edition <span class=\"token variable\">$firefox_version</span> has been installed.<span class=\"token string\">\"\nmessage notify \"</span>To <span class=\"token function\">add</span> to your favorites, search, right click, and <span class=\"token keyword\">select</span> <span class=\"token string\">'Add to Favorites'</span>\"</code></pre></div>\n<h2>Helper Functions</h2>\n<h2>Calculating the Correct Firefox URL</h2>\n<h2></h2>","timeToRead":2,"frontmatter":{"title":"How to Install Firefox Developer Edition on Ubuntu 18.04","date":"November 10, 2019","tags":["productivity"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/11/10-install-firefox-developer-edition-on-ubuntu/","prev":"/2019/11/09-bashing-to-the-next-level/","next":null}}}