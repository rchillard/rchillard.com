{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018/12/06-getting-some-closure-on-js/","webpackCompilationHash":"41eae1b5984b19de0cae","result":{"data":{"markdownRemark":{"html":"<p>You hear developers in the JavaScript world talk about closure.  I always thought it was about getting over the demise of Netscape Navigator.  Boy was I wrong!  (Sorry, horrible joke... sorry not sorry Netscape)</p>\n<p>Closure in JavaScript is actually when an inner function makes use of variables declared in an outer function which has previously returned.  Put another way, closures use data from an outer function to return data with an inner function.</p>\n<p>The most common reason to implement a closure is to protect variables you want to keep private and inaccessible.  Here's a simple example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// this is the variable we want to protect</span>\n    <span class=\"token keyword\">var</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// this unnamed function is our closure</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">++</span>counter<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Getting Some Closure on JavaScript","date":"December 06, 2018","tags":["javascript"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2018/12/06-getting-some-closure-on-js/","prev":"/2018/12/05-broken-arrows-default-parameters/","next":"/2018/12/07-easier-arrays-in-es2015/"}}}