{"data":{"markdownRemark":{"html":"<p>Finally, they've made Arrays easy to work with in ES2015.  I can't believe I'm saying this.  It's great though!  I kind of feel like ES2015 represents years of pent up anger over For loops.  Check this out:</p>\n<h2>find</h2>\n<p>New method that can be invoked on arrays:</p>\n<ul>\n<li>Accepts a callback with value, index and array (just like forEach, map, filter, etc.)</li>\n<li>Returns the value found or 'undefined' if not found</li>\n</ul>\n<p>No longer necessary to use a For loop to find an individual value inside of an array!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jaws\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1975</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jurassic Park\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Saving Private Ryan\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nmovies<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">.</span>year <span class=\"token operator\">===</span> <span class=\"token number\">1975</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// { title: 'Jaws', year: 1975 }</span></code></pre></div>\n<h2>findIndex</h2>\n<p>You can do the same with findIndex, except that this function returns and index or -1 if the value is not present:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jaws\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1975</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jurassic Park\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Saving Private Ryan\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nmovies<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">.</span>year <span class=\"token operator\">===</span> <span class=\"token number\">1998</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2 (the index of the 3rd item in the array)</span></code></pre></div>\n<h2>includes</h2>\n<p>Returns 'true' if a value is found inside of a String, which is easier than using indexOf</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Old way</span>\n<span class=\"token string\">\"batman\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"man\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// New way</span>\n<span class=\"token string\">\"batman\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"man\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h2>Number.isFinite</h2>\n<p>This is a short cut way to tell if a number is Not a Number (NaN):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">checkIfNumber</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isFInite</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"It's a number!\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Find the Included Helpers in ES2015","date":"Dec 19, 2018","tags":["learn","javascript","es2015"]}}},"pageContext":{"slug":"/2018/12/19-generators-abound/","prev":"/2018/12/20-javascript-going-from-cursive-to-print/","next":"/2018/12/21-creating-natural-spaced-repetition/"}}