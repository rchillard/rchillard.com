{"data":{"markdownRemark":{"html":"<p>You know we're not exercising here.  No, I'm talking about the new Set data structure in JavaScript.  Sets are common in other languages (like my old school Java) and this follows a pattern that I have noticed in ES2015.  It increasingly feels like ES2015 is bringing JavaScript up to parity with other languages.</p>\n<h2>Set Characteristics</h2>\n<ul>\n<li>All values in a set are unique</li>\n<li>Any type of value can exist in a set</li>\n<li>Created using the 'new' keyword</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> mySet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span>\n<span class=\"token keyword\">var</span> myOtherSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [1,2,3,4,5]</span>\n\n<span class=\"token comment\">// Add allows you to include entries</span>\nmySet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {1}</span>\nmySet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {1, 2}</span>\nmySet<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {1, 2}</span>\n<span class=\"token comment\">// Set enforces unique values so does not accept 2nd '2'</span>\n\n<span class=\"token comment\">// Easily see the size of a Set</span>\nmySet<span class=\"token punctuation\">.</span>size <span class=\"token comment\">// 2</span>\n\n<span class=\"token comment\">// Determine if value exists</span>\nmySet<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// Delete a value</span>\nmySet<span class=\"token punctuation\">.</span><span class=\"token keyword\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nmySet<span class=\"token punctuation\">.</span>size <span class=\"token comment\">// 1</span>\n\nmyOtherSet<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span> <span class=\"token comment\">// function(){}...</span></code></pre></div>\n<h2>WeakSet</h2>\n<ul>\n<li>All values must be objects</li>\n<li>Values in a WeakSet can lose their references</li>\n<li>More performant than Sets but can not be iterated over</li>\n</ul>","timeToRead":1,"frontmatter":{"title":"Super Set Your JavaScript","date":"December 16, 2018","tags":["learn","javascript","es2015"]}}},"pageContext":{"slug":"/2018/12/16-super-set-your-javascript/","prev":"/2018/12/15-maps-to-new-treasure/","next":"/2018/12/17-promises-promises/"}}