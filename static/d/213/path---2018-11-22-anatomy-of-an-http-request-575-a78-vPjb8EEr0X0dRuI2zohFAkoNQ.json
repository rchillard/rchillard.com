{"data":{"markdownRemark":{"html":"<p>In order to understand how the web works, you have to understand the request-response cycle and how an HTTP request is structured.  This is another post for future me, as I know I'll need to refer back to this fundamental piece of information.</p>\n<p>Each HTTP request is made with a method or verb:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP Method</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>Request data, retrieving information</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>Create new data, adding it to adatabase</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>Update existing data</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>Update existing data</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>Remove data</td>\n</tr>\n</tbody>\n</table>\n<p>And each request has the following requisite parts:</p>\n<table>\n<thead>\n<tr>\n<th>Part</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Method/Verb</td>\n<td>As above, these tell the purpose of the request</td>\n</tr>\n<tr>\n<td>URI</td>\n<td>This is the location or resource for the request</td>\n</tr>\n<tr>\n<td>Headers</td>\n<td>Metadata associated with the request</td>\n</tr>\n<tr>\n<td>Body</td>\n<td>Payload of the request containing data</td>\n</tr>\n<tr>\n<td>Status Code</td>\n<td>Response notifyng request of the resulting status</td>\n</tr>\n</tbody>\n</table>\n<p>Here's a sample HTTP request for a favicon on this page, as you can see in the 1st line, the METHOD, URI, and protocol \"HTTP/1.1\" all appear:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /favicon.ico HTTP/1.1\nHost: localhost:8000\nConnection: keep-alive\nPragma: no-cache\nCache-Control: no-cache\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\nDNT: 1\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\nReferer: http://localhost:8000/2018/11-22-anatomy-of-an-http-request/\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en,en-US;q=0.9,es;q=0.8\nCookie: io=E42523DSDFSDFdddZHkAAAD</code></pre></div>\n<p>Basic guide to Status Codes, as these go hand-in-hand.  When you place an HTTP request to a server, the server responds with a status code, informing your browser (the client) what happened to your request:</p>\n<table>\n<thead>\n<tr>\n<th>Code</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1xx</td>\n<td>Information</td>\n</tr>\n<tr>\n<td>2xx</td>\n<td>Success</td>\n</tr>\n<tr>\n<td>3xx</td>\n<td>Redirects</td>\n</tr>\n<tr>\n<td>4xx</td>\n<td>Client errors</td>\n</tr>\n<tr>\n<td>5xx</td>\n<td>Server errors</td>\n</tr>\n</tbody>\n</table>\n<p>And here's a sample response from my local development server:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTTP/1.1 200 OK\nX-Powered-By: Express\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept\nAccept-Ranges: bytes\nCache-Control: public, max-age=0\nLast-Modified: Mon, 19 Nov 2018 04:13:08 GMT\nETag: W/&quot;7d26-1672a2c0846&quot;\nContent-Type: image/x-icon\nContent-Length: 32038\nDate: Mon, 19 Nov 2018 04:57:45 GMT\nConnection: keep-alive</code></pre></div>\n<p>As you can see, the first line has the protocol \"HTTP/1.1\" and the status code: 200 OK or \"Success!\".  In this example, the local development server successfully returned the favicon.ico, and it displayed in the browser tab next to the title of the site.</p>","timeToRead":2,"frontmatter":{"title":"Anatomy of an HTTP Request","date":"Nov 22, 2018","tags":["learn","http","reference"]}}},"pageContext":{"slug":"/2018/11-22-anatomy-of-an-http-request/","prev":"/2018/11-21-home-network-v1/","next":"/2018/11-23-restful-routing-reference/"}}