{"data":{"markdownRemark":{"html":"<p>Of the two major categories of databases, I plan on learning a little bit about non-relational databases first.  Before I get into a specific one though, here's a map of the different <em>types</em> of non-relational databases:</p>\n<table>\n<thead>\n<tr>\n<th>DB Type</th>\n<th>Example</th>\n<th>Utilized For</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Document</td>\n<td>Mongo</td>\n<td>Groups of key-value pairs, able to be nested to depths, fluid schema means flexibility, fast to build on</td>\n</tr>\n<tr>\n<td>Key-value</td>\n<td>Redis</td>\n<td>Simple key-value stores, scaling well, but does not support complex queries, so suited for simple data</td>\n</tr>\n<tr>\n<td>Column</td>\n<td>Cassandra</td>\n<td>Designed for retrieval of large amounts of a particular column (attribute), benefiting analytic applications</td>\n</tr>\n<tr>\n<td>Graph</td>\n<td>Neo4J</td>\n<td>Used for interconnected data and strong at traversing connections between nodes</td>\n</tr>\n</tbody>\n</table>\n<p>Each of these types should be used for different purposes, but the most common all around utility type is a document-based database, because it has a fluid schema.  The most popular in this category is <a href=\"https://www.mongodb.com/\">MongoDB</a>.</p>","timeToRead":1,"frontmatter":{"title":"Non-Relational Databases","date":"Nov 30, 2018","tags":["learn","databases","non-relational"]}}},"pageContext":{"slug":"/2018/11-30-non-relational-databases/","prev":"/2018/11-29-introduction-to-databases/","next":"/2018/12-01-mongo-like-candy/"}}