{"data":{"markdownRemark":{"html":"<p>Many of the updates made to JavaScript as a part of ES2015 feels like the language is going from cursive (long form) to print.  In general, the long voluminous syntax of old can now be replaced with shorter, more concise code.  That's particularly true for how objects work now.</p>\n<h2>Object Shorthand Notation</h2>\n<p>Creating attributes on objects used to feature duplicative lines where variables were just being assigned to attributes:\nThe old way of doing things:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dogName <span class=\"token operator\">=</span> <span class=\"token string\">\"Fido\"</span>\n<span class=\"token keyword\">var</span> dogBreed <span class=\"token operator\">=</span> <span class=\"token string\">\"Labrador\"</span>\n\n<span class=\"token keyword\">var</span> myPetDog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    dogName<span class=\"token punctuation\">:</span> dogName<span class=\"token punctuation\">,</span>\n    dogBreed<span class=\"token punctuation\">:</span> dogBreed\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the new hotness (coolness?), there's no need to repeat yourself.  You can just list the attributes:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dogName <span class=\"token operator\">=</span> <span class=\"token string\">\"Fido\"</span>\n<span class=\"token keyword\">var</span> dogBreed <span class=\"token operator\">=</span> <span class=\"token string\">\"Labrador\"</span>\n\n<span class=\"token keyword\">var</span> myPetDog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    dogName<span class=\"token punctuation\">,</span>\n    dogBreed\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Object Methods</h2>\n<p>Remember that a method is a function placed on an object.  It's important to avoid arrow functions as methods, because they do not set the context of the keyword 'this' and can result in all sorts of reference errors.  As a result, methods usually looked like this in the old way:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    bark<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Woof woof!\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The new puppy is more efficient.  We don't need the function keyword or colon anymore, and we're still getting new 'this' context:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">bark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Woof woof!\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Computed Property Names</h2>\n<p>When writing the cursive of old JavaScript, it was required to create an object <em>before</em> you assigned a property to it.  Now, you can do these two things at once by using computed property names.  This cuts down on duplication and I think makes a whole lot more sense.  For comparison sake, here's the old way of doing things:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dogOwner <span class=\"token operator\">=</span> <span class=\"token string\">\"Fido\"</span>\n<span class=\"token keyword\">var</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\ndog<span class=\"token punctuation\">[</span>dogOwner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"RCH!\"</span>\ndog<span class=\"token punctuation\">.</span>dogOwner <span class=\"token comment\">// \"RCH!\"</span></code></pre></div>\n<p>The new hotness (coolness?):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> dogOwner <span class=\"token operator\">=</span> <span class=\"token string\">\"Fido\"</span>\n<span class=\"token keyword\">var</span> dog <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>dogOwner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"RCH!\"</span>\n<span class=\"token punctuation\">}</span>\ndog<span class=\"token punctuation\">.</span>dogOwner <span class=\"token comment\">// \"RCH!\"</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"JavaScript Going from Cursive to Print","date":"Dec 19, 2018","tags":["learn","javascript","es2015"]}}},"pageContext":{"slug":"/2018/12/19-javascript-going-from-cursive-to-print/","prev":"/2018/12/18-async-your-battleship/","next":null}}