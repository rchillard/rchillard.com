{"data":{"markdownRemark":{"html":"<p>Finally, they've made Arrays easy to work with in ES2015.  I can't believe I'm saying this.  It's great!  I kind of feel like ES2015 represents years of pent up anger over developers having to manually traverse Arrays using For loops.  Check these changes out:</p>\n<h2>Array.from</h2>\n<p>Enables you to convert other data types into arrays.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Convert array-like-objects into arrays</span>\n<span class=\"token keyword\">var</span> divs <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> converted <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>divs<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Convert different types of objects into arrays</span>\n<span class=\"token keyword\">var</span> firstSet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {1,2,3,4}</span>\n<span class=\"token keyword\">var</span> arrayFromSet <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span>firstSet<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [1,2,3,4]</span></code></pre></div>\n<h2>find</h2>\n<p>New method that can be invoked on arrays:</p>\n<ul>\n<li>Accepts a callback with value, index and array (just like forEach, map, filter, etc.)</li>\n<li>Returns the value found or 'undefined' if not found</li>\n</ul>\n<p>No longer necessary to use a For loop to find an individual value inside of an array!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jaws\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1975</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jurassic Park\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Saving Private Ryan\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nmovies<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">.</span>year <span class=\"token operator\">===</span> <span class=\"token number\">1975</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// { title: 'Jaws', year: 1975 }</span></code></pre></div>\n<h2>findIndex</h2>\n<p>You can do the same with findIndex, except that this function returns and index or -1 if the value is not present:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> movies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jaws\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1975</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jurassic Park\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1993</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Saving Private Ryan\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">:</span> <span class=\"token number\">1998</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nmovies<span class=\"token punctuation\">.</span><span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">.</span>year <span class=\"token operator\">===</span> <span class=\"token number\">1998</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2 (the index of the 3rd item in the array)</span></code></pre></div>\n<h1>For...of Loop</h1>\n<p>ES2015 feels like JavaScript's triple scoop waffle icecream cone--it has so much syntactic sugar!  One scoop of the cone is the For...Of Loop.  This type of loop is particularly useful for iterating over arrays.  In code, an example looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> stooges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Larry\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Moe\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Curly\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> member <span class=\"token keyword\">of</span> stooges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Larry</span>\n<span class=\"token comment\">// Moe</span>\n<span class=\"token comment\">// Curly</span></code></pre></div>\n<h2>How does this work though?</h2>\n<p>Well, it depends on a new function that is part of the array object called Symbol.iterator.  This is really important, because it means this style of loop will not work on generic objects.  For...of can only be used on a data structure that has the Symbol.iterator implemented.</p>","timeToRead":2,"frontmatter":{"title":"Easier Arrays: Array.from, find, findIndex, For...of","date":"December 07, 2018","tags":["javascript"]}}},"pageContext":{"slug":"/2018/12/07-easier-arrays-in-es2015/","prev":"/2018/12/06-getting-some-closure-on-js/","next":"/2018/12/11-better-objects-in-es2015/"}}