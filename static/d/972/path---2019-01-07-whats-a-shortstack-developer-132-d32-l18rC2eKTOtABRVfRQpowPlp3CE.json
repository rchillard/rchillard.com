{"data":{"markdownRemark":{"html":"<p>A shortstack software developer is someone who chooses not to take themselves too seriously by professing their love for pancakes and focusing on the parts of the technology stack that matter most to them.</p>\n<p>Shortstack developers primarily do these three things:\nEmbrace a carefree, fun philosophy when coding\nTake practical approaches to learning new technology\nKnow and be comfortable with always being two pancakes short of a fullstack!</p>\n<p>(!Stack of pancakes with syrup)[luke-pennystan-1132420-unsplash.jpg]</p>\n<h1>First, A Fullstack History Lesson</h1>\n<p>The term ‘fullstack developer’ is fairly new, first entering programmer circles 10 years ago, and only truly entering the zeitgeist recently in the last 5 years.  Before the term was invented, developers were generally grouped into backend developers vs. frontend developers.  Backend developers being masters of server side technologies and databases, while frontend developers being masters of client side technologies such as HTML, CSS, and JavaScript.</p>\n<p>Even before the bifurcation between backend and frontend, developers were generally just called programmers and were generalists to start with.</p>\n<p>Fullstack developers are software developers who claim to have knowledge over the entire technology stack, ranging from low level infrastructure to backend technology all the way up to frontend technology (and everything in between!).  The term ‘full stack web developer’ was first described in 2008 by Randy Schmidt as, “someone that does design, markup, styling, behavior, and programming.”<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<p>The term grew in popularity 2 years later in 2010 when Carlos Bueno published a blog post while working at Facebook.  He described a ‘full-stack programmer’ as:</p>\n<blockquote>\n<p>A \"full-stack programmer\" is a generalist, someone who can create a non-trivial application by themselves. People who develop broad skills also tend to develop a good mental model of how different layers of a system behave. This turns out to be especially valuable for performance &#x26; optimization work. No one can know everything about everything, but you should be able to visualize what happens up and down the stack as an application does its thing.<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></p>\n</blockquote>\n<p>Since then, the term fullstack has been adopted by the tech industry and used (and abused).  This has led to a lot of industry experts questioning the term and pointing out many problems with companies that only want to hire ‘fullstack’ developers.</p>\n<h1>Fullstack Problems</h1>\n<p>Many parties have argued that fullstack developers are a myth, because the range of technologies a developer has to learn in order to achieve an expert level understanding of the entire stack is so immense that it’s virtually impossible.<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup></p>\n<p>Controversy has come from hiring managers and HR departments shifting perceptions to believe that a single fullstack developer can replace two people, a backend developer and a frontend developer.  It’s been argued that teams of people with specialized skill sets build better products anyway, because the fullstack developer is technically possible but practically difficult to find and hire.<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup></p>\n<p>Finally, others have argued that advertising that you’re hiring a ‘fullstack’ developer is tantamount to posting a hiring notice for ‘genius’ or ‘ninja’ and that the term lacks any real meaning in today’s world.<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup></p>\n<p>I would argue that the web is built on so many layers of technology abstraction that software developers with any less than 10 years of experience could not viably call themselves ‘fullstack’, simply because it would take 10 years to learn all of the technologies or ‘the fullstack’ that powers the web.  And even then, such a developer would have to consciously diversify their knowledge across the stack throughout that ten years, which is difficult to do, because mastery generally begets more mastery in any given area.  Remember, this is everything from how CSS works to networking fundamentals.</p>\n<p>It’s incredibly overwhelming and scary to even just write down all the topics, technologies, and focus areas that one would need to learn if you were to go on an epic quest to become a ‘fullstack’ developer.</p>\n<p>As a result, I identify as a shortstack developer.  It’s a lot easier.</p>\n<h1>Philosophy</h1>\n<p>Shortstack as a philosophy is about taking a carefree attitude towards coding.  In an industry plagued by people suffering from impostor syndrome, requiring developers to learn the ‘fullstack’ only exacerbates the issue by intimidating newbies.  Our carefree attitude is reflected by our love for pancakes, but we only need a shortstack, three pancakes, to be satisfied.</p>\n<p>Shortstack developers embrace a philosophy that focuses on learning the technology they need to get the project done, without worrying about the superfluous details that have been abstracted away by the excellent work of other engineers with different specializations.</p>\n<p>As an example, if you’re tasked with making a webpage responsive, it’s okay to not fully understand every layer of the OSI network model.  In fact, forcing yourself to learn that knowledge in that context is actually a distraction from the task at hand, which is building a user interface that works on different screen sizes.</p>\n<p>Shortstackers understand that they’re two pancakes short of a fullstack and gladly accept it.</p>\n<h1>Approach</h1>\n<p>Since shortstack developers own a carefree and pragmatic philosophy, they embrace the most effective way to learn new skills, a virtuous learning cycle of:\n<strong>Learn</strong>: read, listen, or watch a short lesson on a new technology\n<strong>Build</strong>: immediately create a new project using that technology\n<strong>Teach</strong>: solidify their knowledge by teaching, telling, or writing what they learned</p>\n<p>Their approach to a problem is one that relies on <em>not fully understanding layers of abstraction</em> and accepting it. Instead of trying to swallow the whole sea and overwhelming themselves, shortstackers focus on cutting up what’s on their plate in front of them.</p>\n<p>In practical application, this means relying on a team member with different skills or using a managed service instead of one that you have to set up manually.</p>\n<p>Shortstack developers take an approach with focus, so they can learn the parts of the technology stack that matter the most for the problem at hand.</p>\n<p>For me personally, my shortstack approach is to embrace managed services and learn serverless technologies, so that I can focus on business logic and application code.  As a result, I find myself most interested in Function-as-a-Service (FaaS) offerings such as AWS Lambda.  The power of FaaS comes in its flexibility to knit together applications across platforms in a scalable, maintenance free way.</p>\n<h1>Two Pancakes Short</h1>\n<p>If you made it this far, many sugary blessings on you!  A fullstack of pancakes is technically five pancakes and a shortstack is three.  Obviously, this post is only half serious and a bit satirical, but I do think all of us would do better by eating a smaller stack of pancakes, whether that be on our plates or in our technology obsessed minds.</p>\n<p>I am serious about my own philosophy and approach.</p>\n<p>I’m a shortstacker for life!</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://web.archive.org/web/20101204221657/http://forge38.com/blog/2008/06/full-stack-web-developers/\">https://web.archive.org/web/20101204221657/http://forge38.com/blog/2008/06/full-stack-web-developers/</a></p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p><a href=\"https://www.facebook.com/note.php?note_id=461505383919\">https://www.facebook.com/note.php?note_id=461505383919</a> </p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p><a href=\"https://dev.to/remotesynth/theres-no-such-thing-as-a-full-stack-developer-2fp9\">https://dev.to/remotesynth/theres-no-such-thing-as-a-full-stack-developer-2fp9</a> </p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","timeToRead":5,"frontmatter":{"title":"What's a Shortstack Developer?","date":"January 07, 2019","tags":["shortstack"]}}},"pageContext":{"slug":"/2019/01/07-whats-a-shortstack-developer/","prev":"/2019/01/04-my-team-vs-our-team/","next":"/2019/01/18-power-over-distraction/"}}