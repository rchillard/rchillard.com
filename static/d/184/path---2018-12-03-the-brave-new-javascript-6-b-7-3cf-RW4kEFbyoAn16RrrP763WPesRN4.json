{"data":{"markdownRemark":{"html":"<p>Wow, I'm only a few days into learning how much JavaScript changed in 2015 with the release of ES2015, but I am already excited.  </p>\n<h2>My First Sad Try</h2>\n<p>When I first tried to learn ReactJS this last summer, I was shocked at how much basic syntax I did not recognize.  I made the mistake of attending a workshop on React without knowing any of this new syntax.  The instructor kept talking about arrow functions, object destructuring, and all kinds of other terms that I did not recognize.  I was so lost.  It was really disheartening. <img class=\"emoji-icon\" data-icon=\"emoji-crying_cat_face\" style=\"display: inline; margin: 0; position: relative; top: 5px; width: 25px\" src=\"data:image/png;base64, \"></p>\n<p>I felt like <a href=\"https://en.wikipedia.org/wiki/Impostor_syndrome\">an impostor</a>.  It seemed that I had stepped into a <a href=\"https://en.wikipedia.org/wiki/Brave_New_World\">Brave New World</a>, and I was trapped in a code dystopia that made me feel like an Epsilon.</p>\n<h2>My Revelation</h2>\n<p>I had a revelation though.  I had to approach this brave new JavaScript like it was a totally new language.  I decided to try out Colt Steel's <a href=\"https://www.udemy.com/the-advanced-web-developer-bootcamp/\">Advanced Web Developer Bootcamp</a> on Udemy, and lo and behold, the course has a ReactJS pathway and a prerequisite to the actual React content is first learning and mastering ES2015.</p>\n<p>As a result, I'll be highlighting a lot of my ES2015 learnings in the next few weeks on this blog.</p>\n<h2>Template Strings</h2>\n<p>As an example of the brave new world, JavaScript now supports a common feature in other languages: string interpolation!  Of course, JavaScript had to give it its own name: template strings.  This primarily makes string concatenation easier as well as adds support for multiline strings.  The important thing to remember is that you have to use the backtick ` character in place of a quotation mark.</p>\n<p>Here's how we used to do things:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"Rand\"</span>\n<span class=\"token keyword\">var</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">\"al'Thor\"</span>\n<span class=\"token keyword\">var</span> announcement <span class=\"token operator\">=</span> <span class=\"token string\">\"I am the Lord of the Morning, my name is \"</span> <span class=\"token operator\">+</span> firstName <span class=\"token operator\">+</span> <span class=\"token string\">\" of house \"</span> <span class=\"token operator\">+</span> lastName\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>announcement<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Saving those plus signs (they're endangered! we've got way more backticks to spare):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">\"Rand\"</span>\n<span class=\"token keyword\">var</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">\"al'Thor\"</span>\n<span class=\"token keyword\">var</span> announcement <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`I am the Lord of the Morning, my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> of house </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>announcement<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Isn't that a lot nicer?</p>\n<p>And here's a multi-line example of a String:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token template-string\"><span class=\"token string\">`\nThis\ntype\nof\nstring\nactually\nworks\nnow!\n`</span></span></code></pre></div>\n<p>What other String functions have they <em>included</em> in ES2015?</p>\n<h2>includes</h2>\n<p>Returns 'true' if a value is found inside of a String, which is easier than using indexOf</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Old way</span>\n<span class=\"token string\">\"batman\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"man\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// New way</span>\n<span class=\"token string\">\"batman\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"man\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Come and join me on my journey to become a coding Alpha and conquer this brave new JavaScript.</p>\n<p>Here's a quick additional freebie on numbers:</p>\n<h2>Number.isFinite</h2>\n<p>This is a short cut way to tell if a number is Not a Number (NaN):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">checkIfNumber</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isFinite</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"It's a number!\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":2,"frontmatter":{"title":"The Brave New JavaScript: Better Strings","date":"December 03, 2018","tags":["javascript"]}}},"pageContext":{"slug":"/2018/12/03-the-brave-new-javascript/","prev":"/2018/12/02-mongoose-vs-candy/","next":"/2018/12/04-variety-in-javascript/"}}