{"data":{"markdownRemark":{"html":"<p>Generators are a special kind of function which can pause execution and resume at any time.  </p>\n<ul>\n<li>They are created using a * asterisk</li>\n<li>When invoked, a generator object is returned to us with the keys of value and done</li>\n<li>Value is what is returned from the paused function using the yield keyword</li>\n<li>Done is a boolean which returns true when the function has completed</li>\n</ul>\n<p>Here's an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">pauseAndReturnValues</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">yield</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> gen <span class=\"token operator\">=</span> <span class=\"token function\">pauseAndReturnValues</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: 0, done: false}</span>\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: 1, done: false}</span>\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: 2, done: false}</span>\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: 3, done: false}</span>\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: 4, done: false}</span>\ngen<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// {value: undefined, done: true}</span></code></pre></div>\n<p>Generators are useful for handling functions that are very expensive, which we may only want to run at certain times or parts of it at certain times.  This also allows you to introduce steps in large functions.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">pauseAndReturnValues</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">yield</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>val <span class=\"token keyword\">of</span> <span class=\"token function\">pauseAndReturnValues</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 0</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span></code></pre></div>\n<p>You can also use generators to pause asynchronous code.  This is very powerful for handling async operations and Promises.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">getMovieData</span><span class=\"token punctuation\">(</span>movieName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'starting'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">yield</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">getJSON</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`https://omdbapi.com?t=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>movieName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;apikey=thewdb`</span></span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ending'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Next value is returned as a promise, so let's resolve it:</span>\n<span class=\"token keyword\">var</span> movieGetter <span class=\"token operator\">=</span> <span class=\"token function\">getMovieData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'titanic'</span><span class=\"token punctuation\">)</span>\nmovieGetter<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>val <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Generators Abound","date":"Dec 18, 2018","tags":["learn","javascript","es2015"]}}},"pageContext":{"slug":"/2018/12/18-generators-abound/","prev":"/2018/12/17-promises-promises/","next":"/2018/12/19-find-the-included-helpers-in-es2015/"}}